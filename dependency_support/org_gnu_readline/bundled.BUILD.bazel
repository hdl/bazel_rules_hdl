# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

""" A BUILD file for readline. """

load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library", "cc_test")
load("@rules_hdl//dependency_support:pseudo_configure.bzl", "pseudo_configure")

package(default_visibility = ["//visibility:public"])

licenses(["restricted"])  # GPL v3

cc_library(
    name = "readline",
    srcs = glob(
        ["*.c"],
        exclude = ["*_keymap.c"],
    ) + [
        "readline/config.h",
    ],
    hdrs = glob(["*.h"]) + [
        "emacs_keymap.c",
        "vi_keymap.c",
    ],
    copts = [
        "-w",
        "-DHAVE_CONFIG_H",
        "-DRL_LIBRARY_VERSION='\"7.0\"'",
    ],
    defines = [
        "READLINE_HAVE_CONFIG_H",
    ],
    includes = [
        "readline",
    ],
    deps = [
        ":prefixed_readline_header",
        "@net_invisible_island_ncurses//:ncurses",
    ],
)

cc_library(
    name = "prefixed_readline_header",
    include_prefix = "readline",
    hdrs = glob(["*.h"]) + [
        "readline/config.h",
        "emacs_keymap.c",
        "vi_keymap.c",
    ],
)

pseudo_configure(
    name = "config_h",
    src = "config.h.in",
    out = "readline/config.h",
    defs = [],
    mappings = {
        "__EXTENSIONS__": "1",
        "_ALL_SOURCE": "1",
        "_GNU_SOURCE": "1",
        "_POSIX_PTHREAD_SEMANTICS": "1",
        "_TANDEM_SOURCE": "1",
        "RETSIGTYPE": "void",
        "PROTOTYPES": "1",
        "__PROTOTYPES": "1",
        "HAVE_CHOWN": "1",
        "HAVE_FCNTL": "1",
        "HAVE_GETPWENT": "1",
        "HAVE_GETPWNAM": "1",
        "HAVE_GETPWUID": "1",
        "HAVE_ISASCII": "1",
        "HAVE_ISWCTYPE": "1",
        "HAVE_ISWLOWER": "1",
        "HAVE_ISWUPPER": "1",
        "HAVE_ISXDIGIT": "1",
        "HAVE_KILL": "1",
        "HAVE_LSTAT": "1",
        "HAVE_MBRLEN": "1",
        "HAVE_MBRTOWC": "1",
        "HAVE_MBSRTOWCS": "1",
        "HAVE_MEMMOVE": "1",
        "HAVE_PSELECT": "1",
        "HAVE_PUTENV": "1",
        "HAVE_READLINK": "1",
        "HAVE_SELECT": "1",
        "HAVE_SETENV": "1",
        "HAVE_SETLOCALE": "1",
        "HAVE_STRCASECMP": "1",
        "HAVE_STRCOLL": "1",
        "HAVE_STRPBRK": "1",
        "HAVE_TCGETATTR": "1",
        "HAVE_TOWLOWER": "1",
        "HAVE_TOWUPPER": "1",
        "HAVE_VSNPRINTF": "1",
        "HAVE_WCRTOMB": "1",
        "HAVE_WCSCOLL": "1",
        "HAVE_WCTYPE": "1",
        "HAVE_WCWIDTH": "1",
        "STDC_HEADERS": "1",
        "HAVE_DIRENT_H": "1",
        "HAVE_FCNTL_H": "1",
        "HAVE_LANGINFO_H": "1",
        "HAVE_LIMITS_H": "1",
        "HAVE_LOCALE_H": "1",
        "HAVE_MEMORY_H": "1",
        "HAVE_PWD_H": "1",
        "HAVE_STDARG_H": "1",
        "HAVE_STDBOOL_H": "1",
        "HAVE_STDLIB_H": "1",
        "HAVE_STRING_H": "1",
        "HAVE_STRINGS_H": "1",
        "HAVE_SYS_FILE_H": "1",
        "HAVE_SYS_IOCTL_H": "1",
        "HAVE_SYS_SELECT_H": "1",
        "HAVE_TERMCAP_H": "1",
        "HAVE_TERMIO_H": "1",
        "HAVE_TERMIOS_H": "1",
        "HAVE_UNISTD_H": "1",
        "HAVE_WCHAR_H": "1",
        "HAVE_WCTYPE_H": "1",
        "HAVE_MBSTATE_T": "1",
        "HAVE_WCHAR_T": "1",
        "HAVE_WCTYPE_T": "1",
        "HAVE_WINT_T": "1",
        "HAVE_LANGINFO_CODESET": "1",
        "HAVE_DECL_AUDIT_USER_TTY": "1",
        "VOID_SIGHANDLER": "1",
        "GWINSZ_IN_SYS_IOCTL": "1",
        "STRUCT_WINSIZE_IN_SYS_IOCTL": "1",
        "FIONREAD_IN_SYS_IOCTL": "1",
        "HAVE_GETPW_DECLS": "1",
        "HAVE_STRUCT_DIRENT_D_INO": "1",
        "HAVE_STRUCT_DIRENT_D_FILENO": "1",
        "HAVE_POSIX_SIGNALS": "1",
        "HAVE_POSIX_SIGSETJMP": "1",
        "CTYPE_NON_ASCII": "1",
    },
)

# A tiny example binary.
cc_binary(
    name = "readline_example",
    srcs = ["@rules_hdl//dependency_support/org_gnu_readline:readline_example.cc"],
    deps = [
        ":readline",
    ],
)

# Simple test to verify compilation.
cc_test(
    name = "readline_test",
    size = "small",
    srcs = ["@rules_hdl//dependency_support/org_gnu_readline:readline_test.cc"],
    deps = [
        ":readline",
        "@com_google_absl//absl/strings",
        "@com_google_googletest//:gtest_main",
    ],
)
