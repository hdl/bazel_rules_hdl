# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Description:
#   Perl-compatible regular expressions library.
#
#-*- mode: python; -*-
# Libraries in this low-level package may not depend on libraries in packages
# that are not low level.   For more information, including how to submit
# changes to this file, see    http://www/eng/howto/build-monitors.html

licenses(["notice"])

exports_files(["LICENSE"])

PCRE8_SRCS = glob(
    ["pcre_*.c"],
    exclude = [
        "pcre_printint.c",
        "pcre_jit_test.c",
    ],
) + ["pcre_chartables.c"]

PCRE16_SRCS = glob(
    ["pcre16_*.c"],
    exclude = [
        "pcre16_printint.c",
    ],
)

PCRE32_SRCS = glob(
    ["pcre32_*.c"],
    exclude = [
        "pcre32_printint.c",
    ],
)

PCRE_HDRS = [
    "include/pcre.h",
    "include/pcreposix.h",
    "pcre.h",
    "pcreposix.h",
]

PCRE_INTERNAL_HDRS = [
    "config.h",
    "pcre_internal.h",
    "ucp.h",
]

PCRE_COMMON_DEFS = [
    "-DHAVE_CONFIG_H",
    "-DLINK_SIZE=2",
    "-DMATCH_LIMIT=10000000",
    "-DMATCH_LIMIT_RECURSION=1000",
    "-DNO_RECURSE",
    "-DPARENS_NEST_LIMIT=50",
    "-DSUPPORT_UTF",
    "-DSUPPORT_UCP",
]

PCRE8_DEFS = PCRE_COMMON_DEFS + [
    "-DSUPPORT_PCRE8=1",
    # configure defines these only for the 8-bit version. A comment in
    # configure states that they only matter for pcregrep, which is 8-bit only,
    # but we mirror the config.h defines exactly.
    "-DHAVE_LONG_LONG=1",
    "-DHAVE_STRING=1",
    "-DHAVE_STRTOQ=1",
    "-DHAVE_UNSIGNED_LONG_LONG=1",
]

PCRE16_DEFS = PCRE_COMMON_DEFS + [
    "-DSUPPORT_PCRE16=1",
]

PCRE32_DEFS = PCRE_COMMON_DEFS + [
    "-DSUPPORT_PCRE32=1",
]

cc_library(
    name = "internal_hdrs",
    hdrs = PCRE_INTERNAL_HDRS + PCRE_HDRS,

    copts = PCRE8_DEFS,
    visibility = ["//visibility:private"],
)

cc_library(
    name = "pcre",
    srcs = PCRE8_SRCS,
    hdrs = PCRE_HDRS,

    copts = PCRE8_DEFS,
    includes = ["include"],
    deps = [":internal_hdrs"],
)

cc_library(
    name = "pcre16_hdrs",
    hdrs = PCRE_INTERNAL_HDRS + PCRE_HDRS + PCRE8_SRCS,

    copts = PCRE16_DEFS,
    visibility = ["//visibility:private"],
)

cc_library(
    name = "pcre16",
    srcs = PCRE16_SRCS,
    hdrs = PCRE_HDRS,

    copts = PCRE16_DEFS,
    includes = ["include"],
    deps = [":pcre16_hdrs"],
)

cc_library(
    name = "pcre32_hdrs",
    hdrs = PCRE_INTERNAL_HDRS + PCRE_HDRS + PCRE8_SRCS,
    copts = PCRE32_DEFS,
    visibility = ["//visibility:private"],
)

cc_library(
    name = "pcre32",
    srcs = PCRE32_SRCS,
    hdrs = PCRE_HDRS,
    copts = PCRE32_DEFS,
    includes = ["include"],
    deps = [":pcre32_hdrs"],
)

cc_library(
    name = "pcreposix",
    srcs = ["pcreposix.c"],
    hdrs = PCRE_HDRS,
    copts = PCRE8_DEFS,
    deps = [
        ":internal_hdrs",
        ":pcre",
    ],
)

# Testing of PCRE library

# pcretest supports simultaneously testing all three versions (8, 16, and 32).
PCRETEST_DEFS = PCRE_COMMON_DEFS + [
    "-DSUPPORT_PCRE8=1",
    "-DSUPPORT_PCRE16=1",
    "-DSUPPORT_PCRE32=1",
]

cc_library(
    name = "pcretest_hdrs",
    hdrs = PCRE_INTERNAL_HDRS + PCRE_HDRS + [
        "pcre_printint.c",
        "pcre_tables.c",
        "pcre_ucd.c",
    ],
    copts = PCRETEST_DEFS,
    visibility = ["//visibility:private"],
)

cc_binary(
    name = "pcretest",
    srcs = [
        "pcre16_printint.c",
        "pcre32_printint.c",
        "pcre_internal.h",
        "pcre_printint.c",
        "pcreposix.c",
        "pcretest.c",
    ],
    copts = PCRETEST_DEFS,
    visibility = ["//visibility:private"],
    deps = [
        ":pcre",
        ":pcre16",
        ":pcre32",
        ":pcretest_hdrs",
    ],
)

cc_binary(
    name = "pcregrep",
    srcs = ["pcregrep.c"],
    copts = PCRE8_DEFS,
    visibility = ["//visibility:private"],
    deps = [
        ":internal_hdrs",
        ":pcre",
    ],
)

filegroup(
    name = "testdata",
    srcs = [
        "RunTest",
        "RunGrepTest",
    ] + glob(["testdata/*"]),
    visibility = ["//visibility:private"],
)

genrule(
  name = "config",
  srcs = ["@rules_hdl//dependency_support/org_pcre_ftp:config.h"],
  outs = ["config.h"],
  cmd = "cat $(location @rules_hdl//dependency_support/org_pcre_ftp:config.h) > $@",
)

genrule(
  name = "pcre_header_gen",
  srcs = ["@rules_hdl//dependency_support/org_pcre_ftp:pcre.h"],
  outs = ["include/pcre.h"],
  cmd = "cat $(location @rules_hdl//dependency_support/org_pcre_ftp:pcre.h) > $@",
)

genrule(
  name = "pcre_header_gen_top",
  srcs = ["@rules_hdl//dependency_support/org_pcre_ftp:pcre.h"],
  outs = ["pcre.h"],
  cmd = "cat $(location @rules_hdl//dependency_support/org_pcre_ftp:pcre.h) > $@",
)

genrule(
  name = "pcreposix_header_gen",
  srcs = ["pcreposix.h"],
  outs = ["include/pcreposix.h"],
  cmd = "cat $(location pcreposix.h) > $@",
)

genrule(
  name = "runtest_gen",
  srcs = ["@rules_hdl//dependency_support/org_pcre_ftp:RunTest.bazel"],
  outs = ["RunTest.bazel"],
  cmd = "cat $(location @rules_hdl//dependency_support/org_pcre_ftp:RunTest.bazel) > $@",
)

genrule(
  name = "pcre_chartables_gen",
  srcs = ["pcre_chartables.c.dist"],
  outs = ["pcre_chartables.c"],
  cmd = "cat $(location pcre_chartables.c.dist) > $@",
)

sh_test(
    name = "pcre_tests",
    size = "small",
    srcs = ["RunTest.bazel"],
    args = [
        # We have lower (non-default) recursion limit and nesting parenthesis
        # limit. Test 2, 11 and 14 fail with them.
        "~2",
        "~11",
        "~14",
        # We turn off UTF8 validity check, which also happens to disable UTF16
        # and UTF32 validity checks. Tests 15, 18, 24 and 26 check that certain
        # expressions are invalid UTF*, and therefore must be disabled.
        "~15",
        "~18",
        "~24",
        "~26",
    ],
    data = [
        ":pcregrep",
        ":pcretest",
        ":testdata",
    ],
    visibility = ["//visibility:private"],
)
