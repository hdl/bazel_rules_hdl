load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")
load("//dependency_support/com_google_skywater_pdk:cell_libraries.bzl", "CELL_LIBRARIES")

def _pdk_impl(module_ctx):
    root_direct_deps = []
    root_direct_dev_deps = []
    pdk_repo_names = {}

    for module in module_ctx.modules:
        for pdk in module.tags.pdk:
            for library_name in pdk.libraries:
                name = pdk.name + "_" + library_name

                if module.is_root:
                    if module_ctx.is_dev_dependency(pdk):
                        root_direct_dev_deps.append(name)
                    else:
                        root_direct_deps.append(name)

                if name not in pdk_repo_names:
                    pdk_repo_names[name] = ()
                    git_repository(
                        name = name,
                        commit = CELL_LIBRARIES[library_name]["commit"],
                        remote = "https://foss-eda-tools.googlesource.com/skywater-pdk/libs/%s.git" % library_name,
                        shallow_since = CELL_LIBRARIES[library_name]["shallow_since"],
                        build_file_content = """
load("@rules_hdl//dependency_support/com_google_skywater_pdk:declare_cell_library.bzl", "declare_cell_library")
declare_cell_library("{}", "{}")
""".format(name, library_name),
                        patches = CELL_LIBRARIES[library_name].get("patches", []),
                        # Strip one directory level. Useful for patches generated by git.
                        patch_args = [
                            "-p1",
                        ],
                    )

    return module_ctx.extension_metadata(
        root_module_direct_deps = root_direct_deps,
        root_module_direct_dev_deps = root_direct_dev_deps,
    )

_PDK_TAG_ATTRS = {
    "name": attr.string(
        mandatory = True,
        doc = """A name for the repository.
The name must be unique within the set of names registered by this extension.
""",
    ),
    "libraries": attr.string_list(
        doc = "List of standard cell libraries.",
    ),
}

hdl_ext = module_extension(
    implementation = _pdk_impl,
    tag_classes = {
        "pdk": tag_class(
            attrs = _PDK_TAG_ATTRS,
        ),
    },
)
